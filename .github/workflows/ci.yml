name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: "3.11"

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with ruff
      run: |
        ruff check .
    
    - name: Type check with mypy
      run: |
        mypy services/ adapters/ --ignore-missing-imports
      continue-on-error: true
    
    - name: Test with pytest
      env:
        APP_ENV: test
        REDIS_URL: redis://localhost:6379/1
        CONFIG_PATH: ./configs/default.yaml
      run: |
        pytest tests/ -v --tb=short --maxfail=5
    
    - name: Test service startup
      env:
        APP_ENV: test
        REDIS_URL: redis://localhost:6379/1
      run: |
        timeout 30s uvicorn services.decision.app:app --host 0.0.0.0 --port 8000 &
        sleep 5
        curl -f http://localhost:8000/health || exit 1
        curl -f http://localhost:8000/version || exit 1

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t p1-trading-builder:${{ github.sha }} .
    
    - name: Test Docker container
      run: |
        docker run --rm -d --name p1-test \
          -p 8000:8000 \
          -e APP_ENV=test \
          p1-trading-builder:${{ github.sha }}
        
        sleep 10
        
        # Test health endpoint
        curl -f http://localhost:8000/health || exit 1
        
        docker stop p1-test

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install safety
      run: pip install safety
    
    - name: Check dependencies for security vulnerabilities
      run: |
        pip install -r requirements.txt
        safety check
      continue-on-error: true
